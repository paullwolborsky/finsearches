<?php

/**
 * @file misc modifications to finsearch
 */

/**
 * Implements hook_form_alter
 */
function fin_mod_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'mandate_node_form') {
    global $user;
    $form['field_mandate_comments_fc']['und'][0]['field_author_er']['und']['#default_value'] = t($user->name . ' (' . $user->uid . ')');
  }
}

function fin_mod_theme_registry_alter(&$theme_registry) {
  $theme_registry['hierarchical_select_select']['function'] = 'fin_mod_hierarchical_select_select';
  $theme_registry['hierarchical_select_select']['includes'] = array();
  unset($theme_registry['hierarchical_select_select']['file']);
}

function fin_mod_hierarchical_select_select($variables) {
  $element = $variables['element'];
  if(isset($element['#options']['label_1']) && $element['#options']['label_1'] == '') {
    $element['#options']['label_1'] = '<none>';
  }
  element_set_attributes($element, array('id', 'name', 'size'));
  _form_set_class($element, array('form-select'));

  return '<select' . drupal_attributes($element['#attributes']) . '>' . _hierarchical_select_options($element) . '</select>';
}

function fin_mod_hierarchical_select_ajax_commands_alter(&$commands, &$context) {
  $context['element']['hierarchical_select']['selects'][1]['#options']['label_1'] = '<none>';
  $context['element']['#printed'] = FALSE;
  $output = theme('status_messages') . drupal_render($context['element']);
  $commands[0]['output'] = $output;
}

/**
 * Implements hook_block_view_MODULE_DELTA_alter()
 */
function fin_mod_block_view_user_online_alter(&$data, $block = array()) {
  global $user;
  
  $profile = profile2_load_by_user($user->uid, 'main');
  $pid = 0;
  if(!empty($profile->pid)) {
    $pid = $profile->pid;
  }

  if (user_access('access content')) {
    // Count users active within the defined period.
    $interval = REQUEST_TIME - variable_get('user_block_seconds_online', 900);

    // Perform database queries to gather online user lists. We use s.timestamp
    // rather than u.access because it is much faster.
    $authenticated_count = db_query(<<<QUERY_END
   
SELECT COUNT(DISTINCT s.uid)
FROM {sessions} s

INNER JOIN {profile} p ON s.uid = p.uid

INNER JOIN {field_data_field_pf_organization_er} org
  ON p.pid = org.entity_id

INNER JOIN {field_data_field_pf_organization_er} my_org
  ON org.field_pf_organization_er_target_id = my_org.field_pf_organization_er_target_id

WHERE s.timestamp >= :timestamp
AND s.uid > 0
AND my_org.entity_id = :profile_id
QUERY_END
      , array(':timestamp' => $interval, ':profile_id' => $pid))->fetchField();

    $output = '<p>' . format_plural($authenticated_count, 'There is currently 1 user online.', 'There are currently @count users online.') . '</p>';

    // Display a list of currently online users.
    $max_users = variable_get('user_block_max_list_count', 10);
    if ($authenticated_count && $max_users) {
      $items = db_query_range(<<<QUERY_END
     
SELECT u.uid, u.name, MAX(s.timestamp) AS max_timestamp
FROM {users} u
INNER JOIN {sessions} s ON u.uid = s.uid
          
INNER JOIN {profile} p ON s.uid = p.uid

INNER JOIN {field_data_field_pf_organization_er} org
  ON p.pid = org.entity_id

INNER JOIN {field_data_field_pf_organization_er} my_org
  ON org.field_pf_organization_er_target_id = my_org.field_pf_organization_er_target_id

WHERE s.timestamp >= :interval
AND s.uid > 0
AND my_org.entity_id = :profile_id
GROUP BY u.uid, u.name
ORDER BY max_timestamp DESC 
QUERY_END
        , 0, $max_users, array(':interval' => $interval, ':profile_id' => $pid))->fetchAll();
      $output .= theme('user_list', array('users' => $items));
    }

    $data['subject'] = t('Who\'s online');
    $data['content'] = $output;
  }
}

/**
 * Implements hook_views_api().
 */
function fin_mod_views_api() {
   return array(
    'api' => 3,
  );
}

/**
 * Implements hook_field_widget_info_alter().
 */
function fin_mod_field_widget_info_alter(&$info) {
  if (module_exists('fin_options')) {
    $info['fin_options_select']['field types'][] = 'entityreference';
  }
}

/**
 * Implements hook_node_presave().
 */
function fin_mod_node_presave($node) {
  $general = FALSE;
  $outsourced = FALSE;
  $consultant = array();
  if ($node->type == 'plan') {
    // Maybe switch to entity_metadata_wrapper - was having trouble accessing
    // FC values via it though
    if (!empty($node->field_consultant_roster_fc)) {
      foreach ($node->field_consultant_roster_fc['und'] as $fc) {
        $term = taxonomy_term_load($fc['field_consultant_type_tr']['und'][0]['tid']);
        if ($term->name == 'General') {
          if (!empty($fc['field_consultant_firm_er'])) {
            $consultant['general'] = $fc['field_consultant_firm_er']['und'][0];
          }
        }
        else if ($term->name == 'Outsourced CIO') {
          if (!empty($fc['field_consultant_firm_er'])) {
            $consultant['outsourced'] = $fc['field_consultant_firm_er']['und'][0];
          }
        }
      }
      if (!empty($consultant['general'])) {
        $node->field_consultant_roster_main_er['und'][0]['target_id'] = $consultant['general'];
      }
      else if (!empty($consultant['outsourced'])) {
        $node->field_consultant_roster_main_er['und'][0]['target_id'] = $consultant['outsourced'];
      }
    }
  }
}