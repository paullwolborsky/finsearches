<?php

/**
 * @file
 * Module to produce blocks and pages to display user tracking info collected by the statitstics and visitors modules.
 *
 * Written by John W. Johnson
 * 5-18-2016
 */

 /**
 * Implements hook_init().
 *
 */
function fin_user_tracking_init() {
  
}

/**
 * Implements hook_permission().
 *
 */
function fin_user_tracking_permission() {
  return array(
    'view user activity' => array(
      'title' => t('View User Activity'),
      'description' => t('Allow users to view user activity'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function fin_user_tracking_menu() {
  global $user;
  $items = array();
  
  return $items;
}

/*
 *Impliments hook_block_info
 */
function fin_user_tracking_block_info() {
	$blocks['user_page_user_activity'] = array(
    'info' => t('User Page User Activity'),
    'cache' => DRUPAL_NO_CACHE,
	);
	$blocks['user_page_user_top_pages'] = array(
    'info' => t('User Page Top Pages'),
    'cache' => DRUPAL_NO_CACHE,
	);
	return $blocks;
}

/**
 *Impliments hook_block_view
 */
function fin_user_tracking_block_view($delta) {
  global $user;
  $block = array();
  switch ($delta) {
    case "user_page_user_activity":
      $block['subject'] = "User Activity";
      $block['content'] = fin_user_tracking_activity();
      break;
    case "user_page_user_top_pages":
      if (user_access('view user activity')) {
        $block['subject'] = "Top pages for this user";
        $block['content'] = fin_user_tracking_top_pages();
        break;
      }
  }
  
	return $block;
}

/**
 *function to display user activity in a block
 */
function fin_user_tracking_activity() {
  $header = array(
    array('data' => t('#')),
    array('data' => t('User'), 'field' => 'name'),
    array('data' => t('Hits'), 'field' => 'hits', 'sort' => 'desc'),
    array('data' => t('Nodes'), 'field' => 'nodes'),
    array('data' => t('Comments'), 'field' => 'comments')
  );
  
}

/**
 *function to display top pages by user
 */
function fin_user_tracking_top_pages() {
  $path = $_GET['q'];
  $temp = explode('/', $path);
  $uid = (int)$temp[1];
  if (!is_int($uid)) {
    return 'No Valid User';
  }
  $visitors_path = drupal_get_path('module', 'visitors');
  require_once $visitors_path . '/forms/date_filter.inc';
  $date_format = variable_get('date_format_short_custom', 'Y-m-d H:i:s');
  $items_per_page = variable_get('visitors_lines_per_page', 10);

  $header = array(
    array('data' => t('Last Visit'), 'field' => 'last_date'),
    array('data' => t('Path'), 'field' => 'visitors_url'),
    array('data' => t('Count'), 'field' => 'count', 'sort' => 'desc'),
  );

  $query = db_select('visitors', 'v')
    ->extend('PagerDefault')
    ->extend('TableSort');
  $query->addExpression('COUNT(v.visitors_id)', 'count');
  $query->addExpression('MAX(visitors_date_time)', 'last_date');
  $query->addExpression('MIN(v.visitors_url)', 'visitors_url');
  $query->fields('v', array('visitors_path'));
  visitors_date_filter_sql_condition($query);
  $query->groupBy('v.visitors_url');
  $query->condition('v.visitors_uid', $uid, '=');
  $query->orderByHeader($header);
  $query->limit($items_per_page);

  $count_query = db_select('visitors', 'v');
  $count_query->addExpression('COUNT(DISTINCT visitors_path)');
  visitors_date_filter_sql_condition($count_query);
  $query->setCountQuery($count_query);
  $results = $query->execute();

  $rows = array();

  $page = isset($_GET['page']) ? $_GET['page'] : '';
  $i = 0 + ($page  * $items_per_page);

  foreach ($results as $data) {
    $text = parse_url($data->visitors_url)['path'];
    if ($text == '/') {
      $text = 'home';
    }
    $rows[] = array(
      date('m/d/y h:ia', $data->last_date),
      l($text, $data->visitors_url),
      $data->count
    );
  }
	if (count($rows) > 0) {
		$output  = visitors_date_filter();
		$output .= theme('table', array('header' => $header, 'rows' => $rows));
		$output .= theme('pager', array('quantity' => $items_per_page));
	}
	else {
		$output = "No User Activity recorded.";
	}
  return $output; 
}