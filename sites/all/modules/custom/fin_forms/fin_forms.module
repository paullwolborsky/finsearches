<?php
/**
 * @file
 * This file contains code for form alteration AJAX stuff
 * and also some replicate hooks
 *
 *Written by John W. Johnson
 *2-17-2016
 */

 /**
  *Impliments hook_form_alter
  */
function fin_forms_form_alter(&$form, &$form_state, $form_id) {
  $lang = !empty($form_state['values']['language'])?$form_state['values']['language']:'und';
  switch ($form_id) {
    case 'mandate_node_form':
      $form['field_plan_er'][$lang][0]['target_id']['#ajax'] = array(
        'callback'  => 'fin_forms_plan_size_callback',
        'wrapper'   => 'edit-field-plan-size',
        'method'    => 'replace',
        'effect'    => 'fade',
      );
      if (!empty($form_state['values']['field_plan_er'][$lang][0]['target_id']) && empty($form_state['values']['field_plan_size'][$lang][0]['value'])) {
        $plan = node_load($form_state['values']['field_plan_er'][$lang][0]['target_id']);
        $last_size = array_pop($plan->field_plan_size_history[$lang]);
        $size_entity = entity_load('field_collection_item', array($last_size));
        $size_entity = array_pop($size_entity);
        $value = $size_entity->field_plan_size[$lang][0]['value'];
        $form['field_plan_size'][$lang][0]['value']['#value'] = $value;
        $form['field_plan_size'][$lang][0]['value']['#default_value'] = $value;
      }
      
      $form['field_consultant_firm_er'][$lang][0]['target_id']['#ajax'] = array(
        'callback'  => 'fin_forms_consultants_callback',
        'method'    => 'replace',
        'effect'    => 'fade',
        'event'     => 'autocompleteSelect',
      );
      if (!empty($form_state['values']['field_consultant_firm_er'][$lang][0]['target_id']) && empty($form_state['values']['field_consultant_firm_er'][$lang][0]['value'])) {
        $consultant_firm = $form_state['values']['field_consultant_firm_er'][$lang][0]['target_id'];
        $options = fin_forms_get_contacts($consultant_firm);
        $form['field_consultant_contact_er'][$lang]['#options'] = $options;
      }

      foreach ($form['field_consultants_hired'][$lang] as $key => &$hired) {
        if (is_int($key)) {
          $hired['field_consultant_firm_er'][$lang][0]['target_id']['#ajax'] = array(
            'callback'  => 'fin_forms_consultants_callback',
            'method'    => 'replace',
            'effect'    => 'fade',
            'event'     => 'autocompleteSelect',
          );
          if (!empty($hired['field_consultant_firm_er'][$lang][0]['target_id']['#default_value'])) {
            $consultant_firm = $hired['field_consultant_firm_er'][$lang][0]['target_id']['#entity']->field_consultant_firm_er[$lang][0]['target_id'];
            $options = fin_forms_get_contacts($consultant_firm);
            $hired['field_consultant_contact_er'][$lang]['#options'] = $options;
          }
        }
      }
      foreach ($form['field_consultants_terminated'][$lang] as $key => &$terminated) {
        if (is_int($key)) {
          $terminated['field_consultant_firm_er'][$lang][0]['target_id']['#ajax'] = array(
            'callback'  => 'fin_forms_consultants_callback',
            'method'    => 'replace',
            'effect'    => 'fade',
            'event'     => 'autocompleteSelect',
          );
          if (!empty($terminated['field_consultant_firm_er'][$lang][0]['target_id']['#default_value'])) {
            $terminated_firm = $terminated['field_consultant_firm_er'][$lang][0]['target_id']['#entity']->field_consultant_firm_er[$lang][0]['target_id'];
            $terminated_options = fin_forms_get_contacts($terminated_firm);
            $terminated['field_consultant_contact_er'][$lang]['#options'] = $terminated_options;
          }
        }
      }
      break;
    case 'contact_node_form':
      if (!empty($form['field_job_history'][$lang][0])) {
        foreach ($form['field_job_history'][$lang] as $key => $instance) {
          if (is_int($key)) {
            if (!empty($form['field_job_history'][$lang][$key]['field_consultant_firm_er'][$lang][0])) {
              $form['field_job_history'][$lang][$key]['field_consultant_firm_er'][$lang][0]['target_id']['#ajax'] = array(
                'callback' => 'fin_forms_office_callback',
                'method' => 'replace',
                'effect' => 'fade',
                'event' => 'autocompleteSelect'
              );
            }
            if (!empty($form_state['values']['field_job_history'][$lang][$key]['field_consultant_firm_er'][$lang][0]['target_id'])) {
              $options = fin_forms_get_offices($form_state['values']['field_job_history'][$lang][$key]['field_consultant_firm_er'][$lang][0]['target_id']);
              $form['field_job_history'][$lang][$key]['field_consultant_office_er'][$lang]['#options'] = $options;
              $website = fin_forms_get_website($form_state['values']['field_job_history'][$lang][$key]['field_consultant_firm_er'][$lang][0]['target_id']);
              $form_state['website'] = $website;
            }
          }
        }
      }
      break;
    case 'plan_node_form':
      foreach ($form['field_consultant_roster_fc'][$lang] as $key => &$roster) {
        if (is_int($key)) {
          $roster['field_consultant_firm_er'][$lang][0]['target_id']['#ajax'] = array(
            'callback'  => 'fin_forms_consultants_callback',
            'method'    => 'replace',
            'effect'    => 'fade',
            'event'     => 'autocompleteSelect',
          );
          if (!empty($roster['field_consultant_firm_er'][$lang][0]['target_id']['#default_value'])) {
            $consultant_firm = $roster['field_consultant_firm_er'][$lang][0]['target_id']['#entity']->field_consultant_firm_er[$lang][0]['target_id'];
            $options = fin_forms_get_contacts($consultant_firm);
            $roster['field_consultant_contact_er'][$lang]['#options'] = $options;
          }
        }
      }
      break;
  }
}

/**
 *AJAXcallback for updating mandate plan size from plan_er field
 */
function fin_forms_plan_size_callback (&$form, &$form_state = null) {
  return $form['field_plan_size'];
}

/**
 *AJAX callback for option limiting offices
 */
function fin_forms_office_callback (&$form, &$form_state = null) {
  $lang = !empty($form_state['values']['language'])?$form_state['values']['language']:'und';
  $key = $form_state['triggering_element']['#parents'][2];
  $new_office = render($form['field_job_history'][$lang][$key]['field_consultant_office_er']);
  $new_website = render($form['field_job_history'][$lang][$key]['field_website']);
  $new_website = str_replace('value=""', 'value="' . $form_state['website'] . '"', $new_website);
  return array(
    '#type' => 'ajax',
    '#commands' => array(
      ajax_command_replace("#edit-field-job-history-und-" . $key . "-field-consultant-office-er", $new_office),
      ajax_command_replace("div[id^='edit-field-job-history-und-" . $key . "-field-website']", $new_website),
    ),
  );
}

/**
 * Callback function for consultant Firm change
 **/
function fin_forms_consultants_callback (&$form, &$form_state = null) {
  $lang = !empty($form_state['values']['language'])?$form_state['values']['language']:'und';
  $key = $form_state['triggering_element']['#parents'][2];
  $trigger_name = $form_state['triggering_element']['#parents'][0];
  if ($trigger_name == 'field_consultant_firm_er') {
    $new_consultants = render($form['field_consultant_contact_er'][$lang]);
    return array(
      '#type' => 'ajax',
      '#commands' => array(
        ajax_command_replace("#edit-field-consultant-contact-er", $new_consultants),
      ),
    );
  } else {
    $new_consultants =  render($form[$trigger_name][$lang][$key]['field_consultant_contact_er']);
    $field_name = str_replace('_', '-', $form_state['triggering_element']['#parents'][0]);
    return array(
      '#type' => 'ajax',
      '#commands' => array(
        ajax_command_replace("#edit-" . $field_name . "-und-" . $key . "-field-consultant-contact-er", $new_consultants),
      ),
    );
  }
}

/**
 *Function to get the offices for a Consultant firm
 **/
function fin_forms_get_offices ($firm_nid = NULL) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
  ->entityCondition('bundle', 'office')
  ->fieldCondition('field_consultant_firm_er', 'target_id', $firm_nid, '=');
  $result = $query->execute();
  $options = array('none'=>'-none-');
  if (!empty($result)) {
    foreach ($result['node'] as $key=>$value) {
      $office = node_load($value->nid);
      $options[$value->nid] = $office->title_field[$office->language][0]['value']; 
    }
  }
  return $options;
}

/**
 *Function to get the contacts for a consultant firm
 **/
function fin_forms_get_contacts($firm_nid = NULL) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
  ->entityCondition('bundle', 'contact')
  ->fieldCondition('field_consultant_firm_er', 'target_id', $firm_nid, '=');
  $result = $query->execute();
  $options = array('_none'=>'-none-');
  foreach ($result['node'] as $key=>$value) {
    $contact = node_load($value->nid);
    $options[$value->nid] = $contact->title_field[$contact->language][0]['value']; 
  }
  return $options;
}

/**
 *Function to get the website for a consultant firm
 **/
function fin_forms_get_website($firm_nid = NULL) {
  $firm = node_load($firm_nid);
  if (!empty($firm->field_website[$firm->language][0]['url'])) {
    return $firm->field_website[$firm->language][0]['url'];
  } else {
    return '';
  }
}